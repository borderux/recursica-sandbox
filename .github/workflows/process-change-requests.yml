name: Process Change Requests

on:
  push:
    branches: [ main ]
    paths:
      - 'change-requests/**'

permissions:
  contents: read
  pull-requests: write

jobs:
  process-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Find new change request files
        id: find-changes
        run: |
          # Find all JSON files in change-requests directory that were modified in this push
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD | grep '^change-requests/.*\.json$' || true)
          
          if [ -n "$CHANGED_FILES" ]; then
            echo "Found changed files: $CHANGED_FILES"
            echo "changes=$CHANGED_FILES" >> $GITHUB_OUTPUT
            echo "has-changes=true" >> $GITHUB_OUTPUT
          else
            echo "No change request files found"
            echo "has-changes=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Process change requests
        if: steps.find-changes.outputs.has-changes == 'true'
        run: |
          # Process each changed JSON file
          for file in ${{ steps.find-changes.outputs.changes }}; do
            echo "Processing $file..."
            
            # Read the JSON file
            if [ -f "$file" ]; then
              echo "File content:"
              cat "$file"
              
              # Extract issue number from filename
              ISSUE_NUMBER=$(echo "$file" | sed -n 's/change-requests\/change-\([0-9]*\)-.*\.json/\1/p')
              
              if [ -n "$ISSUE_NUMBER" ]; then
                echo "Issue number: $ISSUE_NUMBER"
                
                # Here you would apply the changes to your Storybook components
                # This is where you'd implement the logic to modify components based on the JSON
                
                # For now, we'll just log what we would do
                echo "Would apply changes from issue #$ISSUE_NUMBER"
                
                # Example: You could modify specific component files based on the change type
                # This would be implemented based on your specific needs
              fi
            fi
          done
      
      - name: Build Storybook with changes
        if: steps.find-changes.outputs.has-changes == 'true'
        run: |
          echo "Building Storybook with applied changes..."
          npm run build-storybook
      
      - name: Create PR with changes
        if: steps.find-changes.outputs.has-changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            // Check if there are any changes to commit
            const { execSync } = require('child_process');
            
            try {
              // Check if there are any changes
              const status = execSync('git status --porcelain', { encoding: 'utf8' });
              
              if (status.trim()) {
                console.log('Changes detected, creating PR...');
                
                // Configure git
                execSync('git config --global user.name "github-actions[bot]"');
                execSync('git config --global user.email "github-actions[bot]@users.noreply.github.com"');
                
                // Create a new branch
                const branchName = `apply-changes-${Date.now()}`;
                execSync(`git checkout -b ${branchName}`);
                
                // Add and commit changes
                execSync('git add .');
                execSync('git commit -m "Apply changes from change requests"');
                
                // Push the branch
                execSync(`git push origin ${branchName}`);
                
                // Create a pull request
                const pr = await github.rest.pulls.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: 'Apply Changes from Change Requests',
                  body: `This PR applies changes from the following change request files:
                
                ${{ steps.find-changes.outputs.changes }}
                
                These changes were automatically generated based on user submissions through the main application form.`,
                  head: branchName,
                  base: 'main'
                });
                
                console.log(`Created PR #${pr.data.number}: ${pr.data.html_url}`);
              } else {
                console.log('No changes to commit');
              }
            } catch (error) {
              console.error('Error creating PR:', error);
            } 