name: Create Issue from Form Submission

on:
  workflow_dispatch:
    inputs:
      change_description:
        description: 'Description of the change requested'
        required: true
        type: string
      change_type:
        description: 'Type of change (content, styling, layout, other)'
        required: true
        type: choice
        options:
          - content
          - styling
          - layout
          - other
      priority:
        description: 'Priority level (low, medium, high)'
        required: true
        type: choice
        options:
          - low
          - medium
          - high
      user:
        description: 'User who submitted the request'
        required: false
        type: string
        default: 'anonymous'

permissions:
  issues: write
  contents: write

jobs:
  create-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Create JSON file
        run: |
          # Create the JSON payload
          cat > change-request.json << EOF
          {
            "change": "${{ github.event.inputs.change_description }}",
            "type": "${{ github.event.inputs.change_type }}",
            "priority": "${{ github.event.inputs.priority }}",
            "timestamp": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "user": "${{ github.event.inputs.user }}"
          }
          EOF
      
      - name: Create GitHub Issue
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Read the JSON file
            const jsonContent = fs.readFileSync('change-request.json', 'utf8');
            const changeData = JSON.parse(jsonContent);
            
            // Create issue title
            const title = `Change Request: ${changeData.type} - ${changeData.priority} priority`;
            
            // Create issue body with proper escaping
            const body = [
              'Change Request submitted via the main application.',
              '',
              `**Change Type:** ${changeData.type}`,
              `**Priority:** ${changeData.priority}`,
              `**Description:** ${changeData.change}`,
              `**User:** ${changeData.user}`,
              `**Timestamp:** ${changeData.timestamp}`,
              '',
              'This issue was created automatically from the main application form.',
              '',
              '---',
              '',
              '## JSON Data',
              '```json',
              JSON.stringify(changeData, null, 2),
              '```'
            ].join('\n');
            
            // Create the issue
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['change-request', changeData.type, changeData.priority]
            });
            
            console.log(`Created issue #${issue.data.number}: ${issue.data.html_url}`);
            
            // Upload the JSON file as an attachment
            // Note: GitHub doesn't have a direct API for file attachments to issues
            // We'll create a file in the repo instead
            const fileName = `change-requests/change-${issue.data.number}-${Date.now()}.json`;
            
            await github.rest.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: fileName,
              message: `Add change request JSON for issue #${issue.data.number}`,
              content: Buffer.from(jsonContent).toString('base64'),
              branch: 'main'
            });
            
            // Add a comment to the issue with the file link
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.data.number,
              body: `ðŸ“Ž Change request JSON file: [${fileName}](https://github.com/${context.repo.owner}/${context.repo.repo}/blob/main/${fileName})`
            });
            
            // Set output for other workflows to use
            core.setOutput('issue-number', issue.data.number);
            core.setOutput('issue-url', issue.data.html_url);
            core.setOutput('json-file', fileName); 