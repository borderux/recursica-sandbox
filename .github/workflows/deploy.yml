name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: read

# Allow concurrent deployments for different PRs
concurrency:
  group: "pages-${{ github.event.pull_request.number || github.ref }}"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Debug PR trigger
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "PR number: ${{ github.event.pull_request.number }}"
          echo "PR title: ${{ github.event.pull_request.title }}"
          echo "PR head: ${{ github.event.pull_request.head.ref }}"
          echo "PR base: ${{ github.event.pull_request.base.ref }}"
          echo "Event action: ${{ github.event.action }}"
          echo "Workflow run ID: ${{ github.run_id }}"
      
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build main app
        run: npm run build
      
      - name: Build Storybook for PR
        if: github.event_name == 'pull_request'
        run: npm run build-storybook
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Prepare deployment files
        run: |
          # Create a clean deployment directory
          mkdir -p deployment
          
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "Preparing PR preview deployment..."
            
            # For PRs, create a PR-specific directory structure
            PR_NUMBER=${{ github.event.pull_request.number }}
            mkdir -p deployment/pr-$PR_NUMBER
            
            # Copy the latest Storybook build to PR preview
            if [ -d "builds" ]; then
              # Get the most recent build (last modified)
              LATEST_BUILD=$(ls -t builds/ | head -1)
              if [ -n "$LATEST_BUILD" ]; then
                echo "Using latest build: $LATEST_BUILD"
                cp -r builds/$LATEST_BUILD/* deployment/pr-$PR_NUMBER/
              else
                echo "No builds found"
                exit 1
              fi
            else
              echo "No builds directory found"
              exit 1
            fi
            
            # Create a redirect from root to PR preview
            echo '<!DOCTYPE html><html><head><meta http-equiv="refresh" content="0;url=./pr-'$PR_NUMBER'/"></head><body>Redirecting to <a href="./pr-'$PR_NUMBER'/">PR Preview</a></body></html>' > deployment/index.html
            
          else
            echo "Preparing main branch deployment..."
            
            # Copy built files to deployment root
            cp -r dist/* deployment/
            
            # Copy assets directory to deployment root
            cp -r dist/assets deployment/
            
            # Copy Storybook builds preserving directory structure
            if [ -d "builds" ]; then
              cp -r builds deployment/
            fi
          fi
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './deployment'
          name: 'deployment-${{ github.event.pull_request.number || github.sha }}'

  # Deployment job for main branch
  deploy-main:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Deployment job for PRs using GitHub Environments
  deploy-pr:
    environment:
      name: pr-${{ github.event.pull_request.number }}
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
