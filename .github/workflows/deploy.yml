name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build main app
        run: npm run build
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Prepare deployment files
        run: |
          # Debug: List current directory contents
          echo "Current directory contents:"
          ls -la
          echo ""
          
          # Create a clean deployment directory
          mkdir -p deployment
          
          # Copy built files to deployment root
          cp -r dist/* deployment/
          
          # Copy assets directory to deployment root
          cp -r dist/assets deployment/
          
          # Debug: Check if builds directory exists
          echo "Checking builds directory:"
          ls -la builds/ || echo "builds directory not found"
          echo ""
          
          # Copy Storybook builds preserving directory structure
          if [ -d "builds" ]; then
            echo "Copying builds directory to deployment..."
            cp -r builds deployment/
            echo "Deployment directory contents after copying builds:"
            ls -la deployment/
            echo "Builds subdirectory contents:"
            ls -la deployment/builds/ || echo "builds subdirectory not found"
          else
            echo "builds directory not found, skipping"
          fi
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './deployment'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 